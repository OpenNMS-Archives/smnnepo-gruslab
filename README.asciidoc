= Gru's Lab
:ascii-ids:
:encoding: UTF-8
:icons: font
:numbered:

Gru's Lab is a testing and demonstration environment for +SMNepO+.
It simulates a complex network with a central +OpenNMS+ instance and multiple sites having seperated infrastructure and services.

== Functional overview
The following figure describes the test scenario to simulate.

image:images/overview.png[Functional Overview]

=== The Network Operation Center (NOC)
 * Runs an OpenNMS instance
 * Uses ActiveMQ as a messaging server

=== The Store
 * Runs up to 10 nodes
 * Runs one minion (to manage all nodes)
 * Needs a VPN connection to the NOC (reserved)
 * Needs a "public" connection to the internet
 * A node is not reachable from the outside (E.g. the internet or the NOC)
 * All nodes within a store can see/ping each other.

If there are multiple stores, each store is build exactly the same (even the ip addresses match).

Each node must run

  * snmp agent
  * some java application to collect jmx data
  * send traps to NOC

== Technical overview
The environment is simulated with virtual machines controlled by http://vagrantup.com[vagrant].
Vagrant is responsible for creating and provisioning the machines.
It also creates and wires up the virtual network.

To simulate the network, internal-only networks between the virtual machines are used.
These networks are not accessible from the host and allow isolation of the transmitted data.

For wiring the different networks, a special virtual machine called +router+ is used.
The router is responsible for passing traffic between the networks.

The following figure describes this.

image:images/overview2.png[Technical Overview]

=== OpenNMS VM
The OpenNMS VM is running OpenNMS and the dominion part.

 * The IP is : 192.168.0.2


=== Router VM
The router VM combines the store switches and the NOC.

The IPs are:

 * 192.168.0.1 Switch to OpenNMS (NOC)
 * 192.168.1.1 to 192.168.n.1 (for the stores)


=== Store
The store is represented by N node VMs and one Minion VM.
The IPs are:

 * store 1: node1 - node 10, 192.168.1.3 - 192.168.1.12
 * store 1: switch: 192.168.1.1
 * store 1: minion: 192.168.1.2
 * store 2: node1 - node 10, 192.168.2.3 - 192.168.2.12
 * store 2: switch: 192.168.2.1
 * store 2: minion: 192.168.2.2

== Network overview
The +core+ network contains the central +OpenNMS+ instance and is reachable by all sites via the +router+.

For each store, a separate store network exists.
These networks contains a +SMNnepO Minion+ instance which is able to communicate with the central +OpenNMS+ instance via the +router+.

== Preparation

=== OpenNMS VM
In order to get the OpenNMS VM to work it is required that you know how to build OpenNMS from source.
If you do not know how to do this, go link:http://www.opennms.org/wiki/Developing_with_Git[here]

[NOTE]
You have to checkout branch +pjsm/2.0+.

Run this to do a clean build and assembly of OpenNMS

----
./clean.pl && ./compile.pl && ./assemble.pl -Dopennms.home=/opt/opennms
----

Copy the generated opennms-<version>.tar.gz file to opennms, e.g.

----
cp ~/dev/opennms/target/opennms-<version>.tar.gz ~/dev/smnnepo-gruslab/opennms/opennms.tar.gz
----

[NOTE]
The target file name must be +opennms.tar.gz+

You also have to compile/build the +OpenNMS SMNnepO+ project.

[NOTE]
You have to checkout branch +develop+

Simply invoke

----
mvn clean install -DskipTests
----

And after that copy the generated smnnepo.war file to opennms, e.g.

----
cp ~/dev/smnnepo/sample-repo-webapp/target/smnnepo.war ~/dev/smnnepo-gruslab/opennms/smnnepo.war
----

== Usage
NOTE: All commands must be executed from the project folder.


=== Starting
To start the whole lab with all machines, the following command can be used:

----
vagrant up
----

To start individual virtual machines, use the following command:

----
vagrant up opennms
vagrant up router
etc.
----

To see which virtual machines are available, use:

----
vagrant status
----

The OpenNMS Web UI is forwarded to your host system by default --> http://localhost:8980/opennms
If you have a service running on that port, you should stop that service or change the host port in the link:Vagrantfile[Vagrantfile].

=== Stopping
To shut down all machines from the lab, the following command can be used:

----
vagrant destroy -f <1>
----
<1> *-f* indicates force and does not ask if you really want to destroy all virtual machines.

To stop individual virtual machines, use the following command:

----
vagrant destroy -f opennms
vagrant destroy -f router
etc.
----

== TODO/Open Issues

 * Currently the readme refers to +jira/PJSM-229+ branch but should refer to +pjsm/2.0+ (OpenNMS) or +development/master+ (SMNNEPO)
 * provisioning of the OpenNMS VM seems to work, except the download of the opennms-setup.karaf file from the local OpenNMS.
   I always get a ssh error.
   However if I connect to the vm and manually run +ssh -p 8101 admin@localhost "source http://localhost:8980/smnnepo/opennms-setup.karaf"+ it works.
   We have to fix this.
 * The same is for the minion.
 * Merge with +fooker/playground+
 * Make all Stores have the same ip address range (192.168.X.X)
 * finish all tasks found by a search for +TODO+

== Limitations

At this point there are a few limitations to consider.

 * The minion does not run several apache karaf instances. It runs all in one apache karaf instance and therefore uses a different `smnnepo-setup.karaf` file than the original `SMNnepO`.
 * We use our own +opennms-server.opennmsinit+ script, but we may want to use the official +opennms+ one.
